#!/bin/bash

mkdir -p /tmp/buffer
parsers=3
fifodir=/tmp/buffer

monitor=/tmp/buffer/monitor
mon_PID=/tmp/buffer/monitor.pid
output_=/tmp/buffer/output_
PIDFILE=/tmp/buffer/PID
#killtree='s/[^(]\+\(([0-9]\+)\)/\1\n/g;s/[()]//g'
killtree='s/[^(]\+\(([0-9]\+)\)/\1/g;s/[()]/ /g'

########################################### Auto Generate Handlers
function GEN_HANDLERS(){
	local handler="/tmp/$$$(basename "${BASH_SOURCE}")_handler$$"
	touch "${handler}"
	local cnt
	for cnt in `seq ${parsers}`; do
		cat <<-HANDLER > "${handler}"
			function parser${cnt}_handler(){
				local parser=\$(GET_FIFO parser \${FUNCNAME//[^0-9]/})
				local output=\$(GET_FIFO output \${FUNCNAME//[^0-9]/})
				cat "\${parser}" | sed "s/^/\$(date) :: /" >> "\${output}"
			}
		HANDLER
		source "${handler}"
	done
	rm "${handler}"
}
GEN_HANDLERS
##################################################################
function main(){
	KILL_PID_FILE "${PIDFILE}"
	daemon &
	echo $! > "${PIDFILE}"
	wait
}
function GET_FIFO(){
	local cnt="0000${2}"
	echo "${fifodir}/${1}${cnt: -3}"
}
function KILL_PID_FILE(){
	# test file exists
	[ -f "$1" ] || return 1
	# test pid in file is alive
	cat "$1" | xargs ps --no-heading -p | grep -q "" || return 1
	# kill pid
	cat "$1" | xargs kill
}
function daemon(){
	sleep 3 &
	local PID=$(ps --no-heading -o ppid -p $!)
	trap "pstree -p ${PID} | sed \"${killtree}\" | xargs kill" TERM
	launch_monitor &
	wait
}
function buffer(){
	local parser=$1
	local fifo=$(GET_FIFO buffer ${parser})
	let parser--
	if (( parser )); then
		tee -a "${fifo}" | buffer ${parser}
	else
		tee -a "${fifo}" &>/dev/null
	fi
}
function launch_monitor(){
	# local variables
	local cnt buffer parser
	# setup input fifo
	mkfifo "${monitor}" &>/dev/null
	# setup buffer and parser fifo's
	for cnt in `seq ${parsers}`; do
		mkfifo `GET_FIFO buffer ${cnt}` &>/dev/null
		mkfifo `GET_FIFO parser ${cnt}` &>/dev/null
	done
	# setup stream splitter
	while :; do
		dd if="${monitor}" | buffer ${parsers} &
		jobs -p > "${mon_PID}"
		#jobs -p | sed 's/^/jobs -p :: /' >> "${output_}"
		#jobs -l | sed 's/^/jobs -l :: /' >> "${output_}"
		wait
	done &

	# setup buffer and parser loops
	for cnt in `seq ${parsers}`; do
		buffer=$(GET_FIFO buffer ${cnt})
		parser=$(GET_FIFO parser ${cnt})
		while :; do
			dd if="${buffer}" of="${parser}" conv=notrunc
		done &
		while :; do
			parser${cnt}_handler
			#cat "${mon_PID}" | xargs kill
		done &
	done
	wait
}
function parser1_handler(){
	local parser=$(GET_FIFO parser ${FUNCNAME//[^0-9]/})
	local output=$(GET_FIFO output ${FUNCNAME//[^0-9]/})
	while read line; do
		echo "${line}" | sed "s/^/`date` :: /" >> "${output}"
		sleep .2
	done < <(cat "${parser}")
	cat "${mon_PID}" | xargs kill
}

main "$@"
