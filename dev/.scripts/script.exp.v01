#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Wed Oct 23 22:23:16 2013
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn openconnect ucfvpn-1.vpn.ucf.edu
match_max 100000
expect -exact "p11-kit: invalid config filename, will be ignored in the future: /etc/pkcs11/modules/.\r
p11-kit: couldn't read config file: /etc/pkcs11/modules/.\r
Attempting to connect to 132.170.0.11:443\r
SSL negotiation with ucfvpn-1.vpn.ucf.edu\r
Server certificate verify failed: signer not found\r
\r
Certificate from VPN server \"ucfvpn-1.vpn.ucf.edu\" failed verification.\r
Reason: signer not found\r
Enter 'yes' to accept, 'no' to abort; anything else to view: "
send -- "yes\r"
expect -exact "yes\r
Connected to HTTPS on ucfvpn-1.vpn.ucf.edu\r
GET https://ucfvpn-1.vpn.ucf.edu/\r
Got HTTP response: HTTP/1.0 302 Object Moved\r
SSL negotiation with ucfvpn-1.vpn.ucf.edu\r
Server certificate verify failed: signer not found\r
Connected to HTTPS on ucfvpn-1.vpn.ucf.edu\r
GET https://ucfvpn-1.vpn.ucf.edu/+webvpn+/index.html\r
Please enter your username and password.\r
GROUP: \[ucffaculty|ucfstudent\]:"
send -- "ucffaculty\r"
expect -exact "ucffaculty\r
Username:"
send -- "mi164210\r"
expect -exact "mi164210\r
Password:"
send -- "X!tsanmyg77\r"
expect -exact "\r
POST https://ucfvpn-1.vpn.ucf.edu/+webvpn+/index.html\r
Got CONNECT response: HTTP/1.1 200 OK\r
CSTP connected. DPD 30, Keepalive 20\r
Connect Banner:\r
| You are now connected to UCF's Faculty/Staff VPN Server.\r
| \r
| Virtual Private Network (VPN) access is only permitted for active UCF students, faculty, staff, and explicitly authorized third parties.\r
| \r
| Any unauthorized use or access of this system constitutes computer trespass - a federal felony - and is in violation of international, federal, state, and local statutes.\r
| \r
\r
Connected tun0 as 172.31.6.177, using SSL\r
Established DTLS connection (using OpenSSL)\r
"
send -- ""
expect -exact "^Z"
send -- ""
expect eof
