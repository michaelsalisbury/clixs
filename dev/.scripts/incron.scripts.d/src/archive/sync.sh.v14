#!/bin/bash

function main(){
	local sync_path
	# INCRON_MATCH
	if (( ${#INCRON_MATCH} )); then
		set -- "$(get_local_host)" "${INCRON_MATCH}"
	else
		while [[ "${1//[^[:alpha:]-]/_}" != +(--|) ]]; do

			shift
		done
		[ "${1//[^[:alpha:]-]/_}" == "--" ] && shift
		if ! (( ${#sync_path} )); then		
			if ! (( ${#1} )); then
				sync_path="$(pwd -L)"
			elif [ -e "${1}" ]; then
				sync_path="${1}"
			elif [ -e "${*}" ]; then
				sync_path="${*}"
			fi
		fi
		[ "${sync_path:0:1}" != "/" ] && sync_path="$(cd "${WORK}"; pwd -P)/${EXEC##*[/]}"
		set -- "$(get_local_host)" "${sync_path}"
	fi
	if is_master; then
		#echo master
		sync_hosts "${@}"
	else
		#echo slave
		relay_to_master "${@}"
	fi
}
function sync_hosts(){
	local sync_host=$1
	local sync_path=$2
	local unison_opt="-auto -batch -times -force=newer -confirmbigdel=false -logfile=${ULOG}"
	get_host_sync_order "${sync_host}" &>/dev/null
	sync_lock -e "${sync_path}" || { echo BLOCKED; return 1; }
	while read HOST; do
		if [ -f "${sync_path}" ] || [ -d "${sync_path}" ]; then
			echo Unison :: MODIFY :: ${HOST} :: \"${sync_path}\".
			unison ${unison_opt} "${sync_path}" ssh://${HOST}/"${sync_path}"
		elif ! [ -e "${sync_path}"]; then
			echo Unison :: DELETE :: ${HOST} :: \"${sync_path}\".
			unison ${unison_opt} "${sync_path}" ssh://${HOST}/"${sync_path}"
		else
			echo ERROR :: $(file "${sync_path}")
		fi
	done <<< "${HOST_SYNC_ORDER}"
	sync_lock -r "${sync_path}"
}
function sync_lock(){
	local action=${1}
	local sync_path=${TMP}":"$(sed 's/[^[:alpha:][:digit:]_./-]/_/g;s/[/]/:/g' <<< "${2}")
	case "${action}" in
		-e|-E|--enable)		[ -e "${sync_path}" ] && return 1 || touch "${sync_path}";;
		-r|-R|--release)	[ -e "${sync_path}" ] && rm -vf "${sync_path}" || return 1;;
	esac
}
function get_host_list(){
	sed '/^[[:space:]]*\(#\|$\)/d' "${HOSTS}"
}
function get_local_host(){
	cat <<-GREP | grep -x -i -F -f <(cat) <(get_host_list)
		$(hostname -I | xargs echo)
		$(hostname -f | xargs echo)
		$(hostname -s | xargs echo)
	GREP
}
function get_master_host(){
	get_host_list | head -1
}
function is_master(){
	grep -x -q -i -F -f <(get_local_host) <(get_master_host)
}
function relay_to_master(){
	[ "${EXEC:0:1}" != "/" ] && local EXEC="$(cd "${WORK}"; pwd -P)/${EXEC##*[/]}"
	ssh ${SSH_OPT} $(get_master_host) "${EXEC}" "$@"
}
function get_remote_hosts(){
	local sync_host=$1
	cat <<-GREP | grep -x -v -i -F -f <(cat) <(get_host_list)
		${sync_host}
		$(get_local_host)
	GREP
}
function host_sync_order(){
	local sync_host=$1
	grep -x -v -i -F -f <(get_local_host) <<< "${sync_host}"
	get_remote_hosts "${sync_host}"
}
function get_host_sync_order(){
	local sync_host=$1
	[ -z "${HOST_SYNC_ORDER}" ] && HOST_SYNC_ORDER=$(host_sync_order "${sync_host}")
	echo "${HOST_SYNC_ORDER}"
}
. /etc/incron.scripts.d/src/scripts.common.sh
set_global_vars
set_SSH_OPT
### global vars

# LOGS
ULOG="/var/log/incron.scripts/${APP}.unison"

# variables USER and HOME must be exported for unison to run
# variables USER and HOME are not set in cron or incron
export USER=${USER:-$(whoami)}
export HOME=${HOME:-$(eval echo ~${USER})}
HOSTS="${WORK}/${APP}.hosts"

main "$@" | tee -a "${LOG}"
