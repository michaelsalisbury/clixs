
#user  nobody;
worker_processes  4;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        off;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  off;


    server {
	listen       80;
	# listen       [::]:80;

	#server_name  10.173.161.244;

	#return 301 https://$host$request_uri;
	rewrite ^(.*) https://$host$request_uri;
    }

    server {
	listen       443 default ssl;
        #server_name  10.173.161.244;
	ssl                 on;
	ssl_certificate     /usr/local/etc/ssl/nginx_ssl.crt;
	ssl_certificate_key /usr/local/etc/ssl/nginx_ssl.key.wo-pass;

	# make key                 # openssl genrsa -des3 -out nginx_ssl.key 2048
	# make certificate request # openssl req -new -key nginx_ssl.key -out nginx_ssl.csr
	# make certificate         # openssl x509 -req -days 3650 -in nginx_ssl.csr -signkey nginx_ssl.key -out nginx_ssl.crt
	# remove key password      # mv nginx_ssl.key{,.w-pass
	#                            openssl rsa -in nginx_ssl.key.w-pass -out nginx_ssl.key.wo-pass
	# fix permisions           # chmod 0400 nginx_ssl.crt nginx_ssl.key.wo-pass


        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #location / {
        #    root   /usr/local/www/nginx;
        #    index  index.html index.htm;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/local/www/nginx-dist;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
	#location ^~ /owncloud {
	location / {
		root   /usr/local/www/owncloud;
		index index.php;
		try_files $uri $uri/ /index.php$is_args$args;
		client_max_body_size 512M;
		location ~ ^/(?:\.|data|config|db_structure\.xml|README) {
		#location ~ /usr/local/www/owncloud/(?:\.|data|config|db_structure\.xml|README) {
			deny all;
		}
		location ~ \.php(?:$|/) {
			fastcgi_split_path_info ^(.+\.php)(/.*)$;
			fastcgi_pass unix:/var/run/php-fpm.sock;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			fastcgi_param PATH_INFO $fastcgi_path_info;
			include fastcgi_params;
		}
		location ~* \.(?:jpg|gif|ico|png|css|js|svg)$ {
			expires 30d; add_header Cache-Control public;
		}
	}


    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
