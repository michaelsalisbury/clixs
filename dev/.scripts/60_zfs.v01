#!/bin/bash

BOOT="/boot"
zfsINITRD_PREFIX="initrd.img-"
zfsKERNEL_PREFIX="vmlinuz-"
zfsINITRD_STOR="${BOOT}/zfs"
#GRUB_CMDLINE_LINUX_DEFAULT="max_loop=64 acpi_osi=Linux acpi_backlight=vendor"
GRUB_CMDLINE_LINUX_DEFAULT="quiet max_loop=32 splash"

# functions
cat <<-GRUB
	function zfs_prep {
	 	gfxmode \$linux_gfx_mode
	 	insmod gzio
	 	insmod part_msdos
	 	insmod part_msdos
	 	insmod part_msdos
	 	insmod part_msdos
	 	insmod diskfilter
	 	insmod mdraid09
	 	insmod ext2
	 	# boot_opts="${GRUB_CMDLINE_LINUX_DEFAULT}"
	}
	function zfs_boot {
	 	linux   \${kernel} rpool=\${rpool} bootfs=\${bootfs} root=ZFS= boot=zfs ro \${boot_opts}
	 	initrd  \${initrd}
	}
GRUB

function set_GRUB_CMDLINE_ZFS_DEFAULT(){
	echo "zfsINITRD_STOR::${zfsINITRD_STOR}"
	echo "FOLDER::${FOLDER}"
	echo "INITRD::${INITRD}"

	local CMDLINE=$(< <(echo "${GRUB_CMDLINE_LINUX_DEFAULT}") tr \  \\n)

	local SUB GRUB_OPTS OPT OPT_NAME SEARCH=${BOOT}
	while read SUB; do
		SEARCH="${SEARCH}/${SUB}"
		GRUB_OPTS="${SEARCH}/grub.cfg"
		if [ -f "${GRUB_OPTS}" ]; then
			echo "GRUB_OPTS::${GRUB_OPTS}"
			while read OPT; do
				OPT_NAME=${OPT:1}
				OPT_NAME=${OPT_NAME%%=*}
				echo "      OPT::${OPT}::${OPT_NAME}"
				case "${OPT:0:1}" in
					+)	if grep -q "^${OPT_NAME}\(=\|$\)" <<< "${CMDLINE}"; then
							CMDLINE=$(sed "s/^${OPT_NAME}\(=.*\)\?$/${OPT:1}/" <<< "${CMDLINE}")
						else
							CMDLINE+=$'\n'"${OPT:1}"
						fi
						;;
					-)	CMDLINE=$(sed "/^${OPT_NAME}\(=.*\)\?$/d" <<< "${CMDLINE}")
						;;
					*)	echo MALFORMED::ERROR::${OPT}
						;;
				esac
			done < "${GRUB_OPTS}"
		else
			echo "   SEARCH::${SEARCH}"
		fi
	done < <(< <(echo "${FOLDER#/}") tr \/ \\n)
	echo "CMDLINE::${CMDLINE}"
}

zfsSYSTEM_LAST=
zfsROOT_LAST=

while read INITRD; do
	# variables
	zfsROOT=$(  awk -F'/' '{print $(NF-1)}' <<< "${INITRD}")
	zfsSYSTEM=$(awk -F'/' '{print $(NF-2)}' <<< "${INITRD}")

	zfsBASE=${INITRD%%/${zfsSYSTEM}*}
	zfsBASE=${zfsBASE#${zfsINITRD_STOR}/}

	zfsPOOL=${zfsBASE%%/*}
	zfsFILESYSTEM="${zfsBASE}/${zfsSYSTEM}/${zfsROOT}"

	FOLDER=$(dirname  "${INITRD#${BOOT}}")
	INITRD=$(basename "${INITRD}")
	KERNEL=${INITRD/${zfsINITRD_PREFIX}/${zfsKERNEL_PREFIX}}
	KERNEL=${KERNEL%.v[0-9]*}

	# skip filesystems that don't exist in the pool
	#zfs get type -Hp "${zfsFILESYSTEM}" &> /dev/null || continue
	zfs list -Ho type "${zfsFILESYSTEM}" 2>/dev/null | grep -q -x filesystem || continue

	#submenu="ZFS, ${zfsBASE}/${zfsSYSTEM}"			# BROKE # bash compleation can't handle back slash
	#submenu="ZFS, ${zfsBASE//\//\\\\}\\\\${zfsSYSTEM}"	# BROKE # grub can't handle double forward slash
	#submenu="ZFS, ${zfsBASE//\//..}..${zfsSYSTEM}"
	submenu="ZFS, ${zfsBASE}/${zfsSYSTEM}"
	# if   zfsSYSTEM_LAST is unset start group menu
	if ! (( ${zfsSYSTEM_LAST:+1} )); then
		cat <<-GRUB
			submenu '${submenu}' {
		GRUB
	# else zfsSYSTEM changed close zfsROOT group menu, unset zfsROOT, close zfsSYSTEM group menu, start new zfsSYSTEM group menu
	elif [ "${zfsSYSTEM_LAST}" != "${zfsSYSTEM}" ]; then
			#submenu 'ZFS, ${zfsBASE}/${zfsSYSTEM}' {
		cat <<-GRUB
			 	}
			}
			submenu '${submenu}' {
		GRUB
		zfsROOT_LAST=
	fi

	#submenu="${zfsBASE}/${zfsSYSTEM} :: ${zfsROOT}"
	submenu="${zfsROOT}"
	# if   zfsROOT is unset start group menu
	if ! (( ${zfsROOT_LAST:+1} )); then
		cat <<-GRUB
			 	submenu '${submenu}' {
		GRUB
	# else zfsROOT changed close group menu and start a new one
	elif [ "${zfsROOT_LAST}" != "${zfsROOT}" ]; then
		cat <<-GRUB
			 	}
			 	submenu '${submenu}' {
		GRUB
	fi

	# determine kernel command line arguments starting with GRUB_CMDLINE_LINUX_DEFAULT
	# augment based on grub.cfg files within the zfs boot folder structure "zfsINITRD_STOR"
	# grub.cfg files should contain a list of arguments prepended with a + or - to indicate add/amend or remove
	set_GRUB_CMDLINE_ZFS_DEFAULT 1>&2

	# menuentry
	#linux   /vmlinuz-${kernel} rpool=${rpool} bootfs=${bootfs} root=ZFS= boot=zfs ro ${boot_opts}
	#initrd  /initrd.img-${kernel}
	#menuentry="${zfsSYSTEM}_${zfsROOT}_${INITRD#${zfsINITRD_PREFIX}}"
	menuentry="${zfsSYSTEM} ${zfsROOT} ${INITRD#${zfsINITRD_PREFIX}}"
	cat <<-GRUB
		 		menuentry '${menuentry}' {
		 			zfs_prep
		 			rpool="${zfsPOOL}"
		 			bootfs="${zfsFILESYSTEM}"
		 			kernel="${FOLDER}/${KERNEL}"
		 			initrd="${FOLDER}/${INITRD}"
		 			boot_opts="${GRUB_CMDLINE_LINUX_DEFAULT}"
		 			zfs_boot
		 		}
	GRUB

	#Found linux image: /boot/vmlinuz-3.13.0-29-generic
	#Found initrd image: /boot/initrd.img-3.13.0-29-generic
	#cat <<-STATUS 1>&2
	#	Found linux  image: /boot${FOLDER}/${KERNEL}
	#	Found initrd image: /boot${FOLDER}/${INITRD}
	#STATUS

	# remember
	zfsSYSTEM_LAST=${zfsSYSTEM}
	zfsROOT_LAST=${zfsROOT}
	####################################################################
done < <(find "${zfsINITRD_STOR}" -type f -name ${zfsINITRD_PREFIX}* | sort)

	# close zfsROOT group menu
	if (( ${zfsROOT_LAST:+1} )); then
		cat <<-GRUB
			 	}
		GRUB
	fi
	# close zfsSYSTEM group menu
	if (( ${zfsSYSTEM_LAST:+1} )); then
		cat <<-GRUB
			}
		GRUB
	fi
